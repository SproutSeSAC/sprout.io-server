# This is a basic workflow that is manually triggered

name: Java CI with Gradle

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Git Clone
      - name: Checkout
        uses: actions/checkout@v2

      # 2. Set up JDK 17
      - name: Setup JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드
      - name: chmod to make gradlew ex
        run: chmod +x ./gradlew

      - name: Build Gradle
        run: ./gradlew clean build

      # 4. 도커파일 생성... 차후 레포 내 파일로 변경
      - name: Create Dockerfile
        run: |
          echo "FROM amazoncorretto:17-alpine" > Dockerfile
          echo "COPY build/libs/api-0.0.1-SNAPSHOT.jar /app.jar" >> Dockerfile
          echo "ENTRYPOINT [\"java\", \"-jar\", \"/app.jar\"]" >> Dockerfile
          cat Dockerfile

      # 5. ECR 로그인
      - name: Login ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin 248189947715.dkr.ecr.ap-northeast-2.amazonaws.com

      # 6. 도커 이미지 빌드 및 push
      - name: Build Docker image
        run: |
          docker build -t 248189947715.dkr.ecr.ap-northeast-2.amazonaws.com/back-image:latest .
          docker push 248189947715.dkr.ecr.ap-northeast-2.amazonaws.com/back-image:latest
